{"version":3,"file":"app.js","sources":["app.js"],"sourcesContent":["class TodoApi {\n  static API = \"https://642597b39e0a30d92b368324.mockapi.io/api/todo/\";\n\n  static request(url = \"\", method = \"GET\", body) {\n    return fetch(TodoApi.API + url, {\n      method,\n      body: body ? JSON.stringify(body) : undefined,\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n    });\n  }\n\n  static getList() {\n    return TodoApi.request().catch(() => {\n      throw new Error(\"Con not retrieve todo list from server.\");\n    });\n  }\n\n  static create(todo) {\n    return TodoApi.request(\"\", \"POST\", todo).catch(() => {\n      throw new Error(\"Con not create todo on server.\");\n    });\n  }\n\n  static update(id, changes) {\n    return TodoApi.request(id, \"PUT\", changes).catch(() => {\n      throw new Error(\"Con not update todo on server.\");\n    });\n  }\n\n  static delete(id) {\n    return TodoApi.request(id, \"DELETE\").catch(() => {\n      throw new Error(\"Con not delete todo on server.\");\n    });\n  }\n}\n\nclass Collection {\n  static DEFAULT_TODO = {\n    done: false,\n  };\n  #todoList = [];\n\n  fetch() {\n    return TodoApi.getList().then((list) => {\n      this.#todoList = list;\n    });\n  }\n\n  create(todo) {\n    return TodoApi.create({ ...Collection.DEFAULT_TODO, ...todo }).then(\n      (newTodo) => {\n        this.addListItem(newTodo);\n\n        return newTodo;\n      }\n    );\n  }\n\n  update(id, todo) {\n    return TodoApi.update(id, todo).then((newTodo) => {\n      this.editListItem(todo.id, newTodo);\n\n      return newTodo;\n    });\n  }\n\n  delete(id) {\n    this.deleteListItem(id);\n    TodoApi.delete(id);\n    return Promise.resolve();\n  }\n\n  getList() {\n    return this.#todoList;\n  }\n\n  deleteListItem(id) {\n    this.#todoList = this.#todoList.filter((todoItem) => todoItem.id !== id);\n  }\n\n  editListItem(id, todo) {\n    this.#todoList = this.#todoList.map((todoItem) =>\n      todoItem.id === id ? todo : todoItem\n    );\n  }\n\n  addListItem(todo) {\n    this.#todoList.push(todo);\n  }\n\n  find(id) {\n    return this.#todoList.find((todo) => todo.id === id);\n  }\n}\n\nclass TodoFormView {\n  constructor(options) {\n    this.$form = this.init();\n    this.$inputs = this.$form.find(\"input, textarea\");\n    this.options = options;\n  }\n\n  init() {\n    return $(`\n    <form id=\"todoForm\">\n    <input id=\"id\" type=\"hidden\" />\n    <input id=\"title\" type=\"text\" placeholder=\"Введите сообщение\"/>\n    <button id=\"msgButton\">Отправить</button>\n    </form>\n    `).on(\"submit\", this.onFormSubmit.bind(this));\n  }\n\n  onFormSubmit(e) {\n    e.preventDefault();\n\n    const data = this.getFormData();\n\n    if (!this.isTodoValid(data)) {\n      this.showError(new Error(\"Поле сообщение не должно быть пустым\"));\n      return;\n    }\n\n    this.options.onSubmit(data);\n  }\n\n  isTodoValid(todo) {\n    return todo.title !== \"\";\n  }\n\n  appendTo($el) {\n    $el.append(this.$form);\n  }\n\n  getFormData() {\n    const data = {};\n\n    for (const input of this.$inputs) {\n      data[input.id] = input.value;\n    }\n    return data;\n  }\n\n  setFormData(data) {\n    for (const input of this.$inputs) {\n      input.value = data[input.id];\n    }\n  }\n\n  clearFormData() {\n    for (const input of this.$inputs) {\n      input.value = \"\";\n    }\n  }\n\n  showError(error) {\n    alert(error.message);\n  }\n}\n\nclass TodoListView {\n  static DELETE_BTN = \".deleteBtn\";\n  static EDIT_BTN = \".editBtn\";\n  static SELECTOR_TODO_ITEM = \".todoItem\";\n\n  constructor(options) {\n    this.$listEl = this.init();\n    this.options = options;\n  }\n\n  init() {\n    return $(`<ul id=\"todoList\"></ul>`)\n      .on(\"click\", TodoListView.DELETE_BTN, this.onDeleteBtnClick.bind(this))\n      .on(\"click\", TodoListView.EDIT_BTN, this.onEditBtnClick.bind(this))\n      .on(\n        \"click\",\n        TodoListView.SELECTOR_TODO_ITEM,\n        this.onTodoElClick.bind(this)\n      );\n  }\n\n  onDeleteBtnClick(e) {\n    e.stopPropagation();\n    const id = this.getTodoElId(e.target);\n\n    this.options.onDelete(id);\n  }\n\n  onEditBtnClick(e) {\n    e.stopPropagation();\n\n    const id = this.getTodoElId(e.target);\n\n    this.options.onEdit(id);\n  }\n\n  onTodoElClick(e) {\n    const id = this.getTodoElId(e.target);\n\n    this.options.onToggle(id);\n  }\n\n  getTodoElId(el) {\n    return el.closest(TodoListView.SELECTOR_TODO_ITEM).dataset.id;\n  }\n\n  appendTo($el) {\n    $el.append(this.$listEl);\n  }\n\n  renderTodoList(list) {\n    const html = list.map(this.generateTodoHtml).join(\"\");\n\n    this.$listEl.html(html);\n  }\n\n  replaceTodo(id, todo) {\n    const oldTodoEl = this.$listEl.find(`[data-id=\"${id}\"]`);\n    const newTodoEl = this.generateTodoHtml(todo);\n\n    oldTodoEl.replaceWith(newTodoEl);\n  }\n\n  renderTodo(todo) {\n    const html = this.generateTodoHtml(todo);\n\n    this.$listEl.append(html);\n  }\n\n  generateTodoHtml(todo) {\n    const done = todo.done ? \" done\" : \"\";\n\n    return `\n      <li\n        class=\"todoItem${done}\"\n        data-id=\"${todo.id}\"\n      >\n        <span>${todo.title}</span>\n        <button class=\"editBtn\">[Edit]</button>\n        <button class=\"deleteBtn\">[Delete]</button>\n      </li>\n    `;\n  }\n\n  removeTodo(id) {\n    this.$listEl.find(`[data-id='${id}']`).remove();\n  }\n}\n\nclass Controller {\n  constructor($rootEl) {\n    this.todoCollection = new Collection();\n    this.todoFormView = new TodoFormView({ onSubmit: this.save.bind(this) });\n    this.todoListView = new TodoListView({\n      onDelete: this.deleteTodoEl.bind(this),\n      onEdit: (id) => {\n        const todo = this.todoCollection.find(id);\n        this.todoFormView.setFormData(todo);\n      },\n      onToggle: this.toggleDone.bind(this),\n    });\n\n    this.todoFormView.appendTo($rootEl);\n    this.todoListView.appendTo($rootEl);\n\n    this.todoCollection.fetch().then(() => {\n      this.todoListView.renderTodoList(this.todoCollection.getList());\n    });\n  }\n\n  save(todo) {\n    if (todo.id) {\n      this.todoCollection\n        .update(todo.id, todo)\n        .then((newTodo) => {\n          this.todoListView.replaceTodo(todo.id, newTodo);\n          this.todoFormView.clearFormData();\n        })\n        .catch((e) => showError(e));\n    } else {\n      this.todoCollection\n        .create(todo)\n        .then((newTodo) => {\n          this.todoListView.renderTodo(newTodo);\n          this.todoFormView.clearFormData();\n        })\n        .catch((e) => showError(e));\n    }\n  }\n\n  deleteTodoEl(id) {\n    this.todoCollection.delete(id).catch((e) => showError(e));\n    this.todoListView.removeTodo(id);\n  }\n\n  toggleDone(id) {\n    const todo = this.todoCollection.find(id);\n\n    todo.done = !todo.done;\n\n    this.todoCollection.update(id, todo).catch((e) => showError(e));\n    this.todoListView.replaceTodo(id, todo);\n  }\n}\n\nconst $rootEl = $(\"#root\");\nnew Controller($rootEl);\n"],"names":["TodoApi","API","request","url","method","body","fetch","JSON","stringify","undefined","headers","Content-type","then","res","ok","json","getList","catch","Error","create","todo","update","id","changes","delete","Collection","DEFAULT_TODO","done","#todoList","this","list","addListItem","newTodo","editListItem","deleteListItem","Promise","resolve","filter","todoItem","map","push","find","TodoFormView","constructor","options","$form","init","$inputs","$","on","onFormSubmit","bind","e","preventDefault","data","getFormData","isTodoValid","onSubmit","showError","title","appendTo","$el","append","input","value","setFormData","clearFormData","error","alert","message","TodoListView","DELETE_BTN","EDIT_BTN","SELECTOR_TODO_ITEM","$listEl","onDeleteBtnClick","onEditBtnClick","onTodoElClick","stopPropagation","getTodoElId","target","onDelete","onEdit","onToggle","el","closest","dataset","renderTodoList","html","generateTodoHtml","join","replaceTodo","oldTodoEl","newTodoEl","replaceWith","renderTodo","removeTodo","remove","Controller","$rootEl","todoCollection","todoFormView","save","todoListView","deleteTodoEl","toggleDone"],"mappings":"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"}